###############
Design Document
###############

I chose to make a SuperTool for this task since it is the easiest way to modify node
structures dynamically as a result of user input and the best way to handle UI with PyQt.
The AlembicLoaderEditor class (Editor.py) handles everything related to the UI, while the
AlembicLoaderNode class (Node.py) takes care of the internal logic of the SuperTool, such
as enabling/disabling loaded geometry and switching between versions. This division between
UI and the internal logic is fundamental to any scalable tool.

With more time, I would have liked to update the tool so that it works properly when the 
user deletes alembic nodes inside the group. Right now, the node logic and UI are not updated
as they should.

Thank you for reading.
